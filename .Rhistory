test <- t.test(height, mu = 177.8, alternative = "greater")
test$p.value
qqnorm(height)
qqline(height)
qqnorm(height)
qqline(height, col = 2)
hist(height)
xbar_obs <- mean(height)
tobs <- (xbar_obs - 177.8) / (sd(height) / sqrt(length(height))
tobs <- (xbar_obs - 177.8) / (sd(height) / sqrt(length(height))
(xbar_obs - 177.8) / (sd(height) / sqrt(length(height))
xbar_obs <- mean(height)
n <- length(height)
s <- sd(height)
xbar_obs <- mean(height)
n <- as.numeric(length(height))
s <- sd(height)
t_obs <- (xbar_obs - 177.8) / (s / sqrt(n))
ptnorm(t_obs, mean = 177.8, sd = s/srt(n))
pt(t_obs, df = n-1)
p <- pt(t_obs, df = n-1, lower.tail = FALSE)
p
p1 <- c(59.5, 53.3, 56.8, 63.1, 58.7)
p2 <- c(55.2, 59.1, 52.8, 54.4)
p3 <- c(51.7, 48.4, 53.9, 49.0)
p4 <- c(44.6, 48.5, 41.0, 47.3, 46.1)
boxplot(p1, p2, p3, p4)
?aov
SS_between <- 0
grand_mean <- mean(p1, p2, p3, p4)
p1 <- c(59.5, 53.3, 56.8, 63.1, 58.7)
p2 <- c(55.2, 59.1, 52.8, 54.4)
p3 <- c(51.7, 48.4, 53.9, 49.0)
p4 <- c(44.6, 48.5, 41.0, 47.3, 46.1)
grand_mean <- mean(p1, p2, p3, p4)
grand_mean <- mean(c(p1, p2, p3, p4))
c(p1, p2, p3, p4)
SS_between <- 0
grand_mean <- mean(c(p1, p2, p3, p4))
ybars <- c(mean(p1), mean(p2), mean(p3), mean(p4))
ns <- c(as.numeric(length(p1)), as.numeric(length(p2)),
as.numeric(length(p3)), as.numeric(length(p4)))
p1 <- c(59.5, 53.3, 56.8, 63.1, 58.7)
p2 <- c(55.2, 59.1, 52.8, 54.4)
p3 <- c(51.7, 48.4, 53.9, 49.0)
p4 <- c(44.6, 48.5, 41.0, 47.3, 46.1)
boxplot(p1, p2, p3, p4)
SS_between <- 0
grand_mean <- mean(c(p1, p2, p3, p4))
ybars <- c(mean(p1), mean(p2), mean(p3), mean(p4))
ns <- c(as.numeric(length(p1)), as.numeric(length(p2)),
as.numeric(length(p3)), as.numeric(length(p4)))
for(i in 1:3) {
SS_between <- SS_between + ns(i) * (ybars(i) - grand_mean)^2
}
1:3
for(i in 1:3) {
SS_between <- SS_between + ns[i] * (ybars[i] - grand_mean)^2
}
ys <- c(p1, p2, p3, p4)
ys <- data.frame(p1, p2, p3, p4)
p1 <- c(59.5, 53.3, 56.8, 63.1, 58.7)
p2 <- c(55.2, 59.1, 52.8, 54.4, null)
p3 <- c(51.7, 48.4, 53.9, 49.0, null)
p4 <- c(44.6, 48.5, 41.0, 47.3, 46.1)
ys <- data.frame(p1, p2, p3, p4)
p1 <- c(59.5, 53.3, 56.8, 63.1, 58.7)
p2 <- c(55.2, 59.1, 52.8, 54.4, 0)
p3 <- c(51.7, 48.4, 53.9, 49.0, 0)
p4 <- c(44.6, 48.5, 41.0, 47.3, 46.1)
ys <- data.frame(p1, p2, p3, p4)
View(ys)
SS_within <- 0
for(i in 1:4) {
num <- ns[i]
for(j in 1:num) {
SS_within <- SS_within + (ys[i, j] - ybars[i])^2
}
}
for(i in 1:ns[1]) {
SS_within <- SS_within + (p1[i]-mean(p1))^2
}
SS_within <- 0
for(i in 1:ns[1]) {
SS_within <- SS_within + (p1[i]-mean(p1))^2
}
SS_within <- 0
for(i in 1:ns[1]) {
SS_within <- SS_within + (p1[i]-mean(p1))^2
}
for(i in 1:ns[2]) {
SS_within <- SS_within + (p2[i]-mean(p2))^2
}
for(i in 1:ns[3]) {
SS_within <- SS_within + (p3[i]-mean(p2))^2
}
for(i in 1:ns[4]) {
SS_within <- SS_within + (p4[i]-mean(p2))^2
}
matrix <- as.matrix(data.frame(p1, p2, p3, p4))
View(matrix)
View(matrix)
matrix[1,3]
matrix[2,4]
as.numeric(matrix[2,4])
SS_within <- 0
for(k in 1:4) {
for(i in 1:ns[k]) {
SS_within <- SS_within + (as.numeric(matrix[i, k])-ybars[k])^2
}
}
for(k in 1:4) {
for(i in 1:ns[k]) {
SS_total <- SS_total + (as.numeric(matrix[i, k]) - grand_mean)^2
}
}
SS_total <- 0
for(k in 1:4) {
for(i in 1:ns[k]) {
SS_total <- SS_total + (as.numeric(matrix[i, k]) - grand_mean)^2
}
}
SS_total - SS_between - SS_within
obs.counts <- c(14, 28, 44)
p0 <- c(12/54, 17/54, 25/54)
chisq.test(obs.counts, p = p0)
chisq.test(obs.counts, p = p0)$expected
obs.counts <- matrix(c(728, 1304, 495, 1072, 2800, 1193), ncol = 3, byrow = T)
chisq.test(obs.counts)
#F test, 1-way ANOVA
dat <- read.table("https://sites.stat.washington.edu/marzban/390/winter21/9_1_dat.txt",
header = TRUE)
aov.1 = aov(Vibration ~ as.factor(Brand), data = dat)
summary(aov.1)
boxplot(Vibration ~ Brand, data = dat)
ntrial = 5000
n = 10
x = c(1:n)
y_true = 10 + 2*x
sigma_eps = 15
beta_hat = numeric(ntrial)
set.seed(123)
y_obs = y_true + rnorm(n, 0, sigma_eps)
lm.1 = lm(y_obs ~ x)
summary(lm.1)
lm.1$coefficients
lm.1$coefficients[2]
ntrial = 5000
n = 10
x = c(1:n)
y_true = 10 + 2*x
sigma_eps = 15
beta_hat = numeric(ntrial)
set.seed(123)
for(trial in 1:ntrial) {
y_obs = y_true + rnorm(n, 0, sigma_eps)
lm.1 = lm(y_obs ~ x)
beta_hat[trial] = lm.1$coefficients[2]
}
hist(beta_hat)
hist(beta_hat)
2- mean(beta_hat)
Sxx <- 0
for(i in 1:ntrial) {
Sxx <- Sxx + (beta_hat[trial] - mean(beta_hat))^2
}
std(beta_hat)
sigma_eps / sqrt(Sxx)
sd(beta_hat)
Sxx <- (n - 1) * sd(beta_hat)^2
sd(beta_hat)
sigma_eps / sqrt(Sxx)
qqnorm(beta_hat)
abline
qqnorm(beta_hat)
abline(col = 2)
qqnorm(beta_hat)
abline(mean(beta_hat), sd(beta_hat), col = 2)
p_1.6 <- c(59.5, 53.3, 56.8, 63.1, 58.7)
p_3.8 <- c(55.2, 59.1, 52.8, 54.4)
p_6.0 <- c(51.7, 48.4, 53.9, 49.0)
p_10.2 <- c(44.6, 48.5, 41.0, 47.3, 46.1)
dat<- data.frame(1.6: p_1.6, 3.8: p_3.8, 6.0:p_6.0, 10.2: p_10.2)
dat<- data.frame(P_1.6: p_1.6, P_3.8: p_3.8, P_6.0:p_6.0, P_10.2: p_10.2)
dat<- data.frame(p_1.6, p_3.8, p_6.0, p_10.2)
p_6.0 <- c(51.7, 48.4, 53.9, 49.0, null)
p_1.6 <- c(59.5, 53.3, 56.8, 63.1, 58.7)
p_3.8 <- c(55.2, 59.1, 52.8, 54.4, null)
p_6.0 <- c(51.7, 48.4, 53.9, 49.0, null)
p_10.2 <- c(44.6, 48.5, 41.0, 47.3, 46.1)
dat<- data.frame(p_1.6, p_3.8, p_6.0, p_10.2)
p_1.6 <- c(59.5, 53.3, 56.8, 63.1, 58.7)
p_3.8 <- c(55.2, 59.1, 52.8, 54.4, 0)
p_6.0 <- c(51.7, 48.4, 53.9, 49.0, 0)
p_10.2 <- c(44.6, 48.5, 41.0, 47.3, 46.1)
dat<- data.frame(p_1.6, p_3.8, p_6.0, p_10.2)
View(dat)
View(dat)
#F test, 1-way ANOVA
dat <- read.table("https://sites.stat.washington.edu/marzban/390/winter21/9_1_dat.txt",
header = TRUE)
aov.1 = aov(Vibration ~ as.factor(Brand), data = dat)
View(dat)
pressures <- c(1.6, 1.6, 1.6, 1.6, 1.6, 3.8, 3.8, 3.8,
3.8, 3.8, 6.0, 6.0, 6.0, 6.0, 6.0, 10.2,
10.2, 10.2, 10.2)
temps <- c(59.5, 53.3, 56.8, 63.1, 58.7, 55.2, 59.1, 52.8, 54.4,
51.7, 48.4, 53.9, 49.0,44.6, 48.5, 41.0, 47.3, 46.1)
dat1 <- data.frame(pressures, temps)
pressures <- c(1.6, 1.6, 1.6, 1.6, 1.6, 3.8, 3.8, 3.8,
3.8, 6.0, 6.0, 6.0, 6.0, 6.0, 10.2,
10.2, 10.2, 10.2)
dat1 <- data.frame(pressures, temps)
aov_dat <- aov(temps ~ as.fact(pressures), data = dat)
aov_dat <- aov(temps ~ as.factor(pressures), data = dat)
summary(aov_dat)
grandmean <- (as.numeric(length(p_1.6)) / n * mean(p_1.6)) +
(as.numeric(length(p_3.8)) / n * mean(p_3.8)) +
(as.numeric(length(p_6.0)) / n * mean(p_6.0)) +
(as.numeric(length(p_10.2)) / n * mean(p_10.2))
View(dat1)
grandmean <- 1 / n *(as.numeric(length(p_1.6))* mean(p_1.6) +
as.numeric(length(p_3.8)) * mean(p_3.8) +
as.numeric(length(p_6.0)) * mean(p_6.0) +
as.numeric(length(p_10.2)) * mean(p_10.2))
grandmean <- 5/18 * mean(p_1.6) +
4/18 * mean(p_3.8) +
4/18* mean(p_6.0) +
5/18 * mean(p_10.2)
SS_between <- 5 * (mean(p_1.6) - grandmean)^2 + 4 * (mean(p_3.8) - grandmean)^2 +
4 * (mean(p_6.0) - grandmean)^2 + 5 * (mean(p_10.2) - grandmean)^2
SS_within <- 0
for(i in 1:5) {
SS_within <- SS_within + (p_1.6[i] - mean(p_1.6))^2
}
for(i in 1:4) {
SS_within <- SS_within + (p_3.8[i] - mean(p_3.8))^2
}
for(i in 1:4) {
SS_within <- SS_within + (p_6.0[i] - mean(p_6.0))^2
}
for(i in 1:5) {
SS_within <- SS_within + (p_10.2[i] - mean(p_10.2))^2
}
Fobs <- (SS_between / (4 - 1)) / (SS_within / (18 - 4))
#Regular Chi Squared
obs.counts <- c(14, 28, 44)
p0 <- c(12/54, 17/54, 25/54)
chisq.test(obs.counts, p = p0)$expected
#Chi Squared Independence
obs.counts <- matrix(c(728, 1304, 495, 1072, 2800, 1193), ncol = 3, byrow = T)
chisq.test(obs.counts)
#F test, 1-way ANOVA
dat <- read.table("https://sites.stat.washington.edu/marzban/390/winter21/9_1_dat.txt",
header = TRUE)
aov.1 = aov(Vibration ~ as.factor(Brand), data = dat)
summary(aov.1)
boxplot(Vibration ~ Brand, data = dat)
#Tukey's Test
library(stats)
tuk.1 <- TukeyHSD(aov.1, conf.leve = .99)
tuk.1
plot(tuk.1)
abline(v = 0)
attach(dat)
k <- 5
n <- m <- s <- numeric(k)
for(i in 1:k) {
n[i] <- 6
m[i] <- mean(dat[Brand == i, 2])
s[i] <- sd(dat[Brand == i, 2])
}
df.1 <- k-1
df.2 <- k * 6 - k
SSB <- sum(n * (m - mean(m)) ^ 2)
SSW <- sum(n - 1 * s ^2)
MSB <- SSB / df.1
MSW <- SSW / df.2
F <- MSB/MSW
p.value <- 1 - pf(F, df.1, df.2)
#F test, 1-way ANOVA
dat <- read.table("https://sites.stat.washington.edu/marzban/390/winter21/9_1_dat.txt",
header = TRUE)
attach(dat)
k <- 5
n <- m <- s <- numeric(k)
for(i in 1:k) {
n[i] <- 6
m[i] <- mean(dat[Brand == i, 2])
s[i] <- sd(dat[Brand == i, 2])
}
df.1 <- k-1
df.2 <- k * 6 - k
SSB <- sum(n * (m - mean(m)) ^ 2)
SSW <- sum(n - 1 * s ^2)
MSB <- SSB / df.1
MSW <- SSW / df.2
F <- MSB/MSW
p.value <- 1 - pf(F, df.1, df.2)
df.1 <- k-1
df.2 <- k * 6 - k
SSB <- sum(n * (m - mean(m)) ^ 2)
SSW <- sum((n - 1) * s ^2)
MSB <- SSB / df.1
MSW <- SSW / df.2
F <- MSB/MSW
p.value <- 1 - pf(F, df.1, df.2)
obs.counts <- matrix(c(435, 58, 89, 375, 50, 84), ncol = 3, byrow = T)
View(obs.counts)
obs.counts <- matrix(c(435, 58, 89, 375, 50, 84), ncol = 3, byrow = T)
total <- sum(obs.counts)
rowsum <- apply(obs.counts, 1, sum)
colsum <- apply(obs.counts, 2, sum)
expected <- (matrix(rowsum) %*% t(matrix(colsum))) / total
expected
residuals <- (obs.counts - expected) / sqrt(expected)
df <- prod(dim(obs.counts) - 1)
X2 <- sum(residuals ^ 2)
1 - pchisq(X2, df)
#T and F for regression coefficients
dat1 <- read.table("https://sites.stat.washington.edu/marzban/390/winter21/11_39_dat.txt",
header = TRUE)
plot(dat1, cex = 0.5)
model.1 <- lm(y ~x1 + x2, data = dat1)
summary(model.1)
summary(mode.1)$fstatistic
summary(model.1)$fstatistic
confint(model.1, level= 0.99)
predict(model.1, interval = "confidence", level = 0.95)
predict(model.1, interval = "prediction", level = 0.95)
setwd("~/Documents/GitHub/spd-use-of-force")
library(rgdal)
library(dplyr)
library(dummies)
library(tidyverse)
library(RSocrata)
library(broom)
library(geojsonio)
# loading in the data
beats <- readOGR('static/beats/SPD_BEATS_WGS84.shp')
census <- readOGR('static/census/A_Tract_Profile_ACS_5-year_2009-2013.shp')
uof <- as.data.frame(read.socrata('https://data.seattle.gov/resource/ppi5-g2bj.csv'))
pumas <- readOGR('static/pumas/cb_2018_53_puma10_500k.shp')
# cleaning the uof data
uof$occured_date_time <- as.Date(substr(uof$occured_date_time, 1, 10), format =
'%Y-%m-%d')
colnames(uof)[4] <- 'Date'
levels(uof$subject_race) <- c('Nat_Am', 'Asian', 'Black', 'Hisp_Lat', 'Pac_Isl',
'Race_NA', 'White')
uof$subject_race <- as.factor(uof$subject_race)
uof$incident_type <- as.factor(uof$incident_type)
levels(uof$incident_type) <- c('1', '2', '3', '4')
uof <- dummy.data.frame(data=uof, names=c('subject_race', 'subject_gender',
'incident_type'), sep='_')
uof$count <- 1
colnames(uof)[3:6] <- c('Type_1','Type_2','Type_3','Type_4')
colnames(uof)[13:22] <- c('Nat_Am', 'Asian', 'Black', 'Hisp_Lat', 'Pac_Isl',
'Race_NA', 'White', 'F', 'M', 'Gender_NA')
# cleaning the beats data
beats <- spTransform(beats, proj4string(census))
beats_df <- tidy(beats, id = 'objectid')
colnames(beats@data)[1] <- 'id'
beats_df <- left_join(beats_df, beats@data, by='id')
beats_df <- beats_df[1:8]
by_beat <- aggregate(cbind(Type_1, Type_2, Type_3, Type_4, Nat_Am, Asian, Black,
Hisp_Lat, Pac_Isl, Race_NA, White, F, M, Gender_NA,
count) ~ beat, data=uof, sum)
colnames(beats_df)[8] <- 'beat'
beats_df <- left_join(beats_df, by_beat, by='beat')
# cleaning the census data
census <- cbind(census[1:3], census[6:8], census[10], census[12], census[14],
census[16], census[18], census[20], census[22], census[45:46],
census[48], census[50], census[54], census[56], census[78])
colnames(census@data) <- c('ID', 'GEOID', 'Tract_Name', 'Total_Pop', 'Median_Age',
'White', 'Black', 'NatAm', 'Asian', 'PacIsl',
'OtherRace', 'TwoPlusRace', 'HispLat', 'Pct_HSGrad',
'Pct_BachGrad', 'EngNotVWell', 'MedianHHIncome',
'Pop200PctBelowPov', 'PersonOfColor', 'Median_Gross_Rent')
census@data$Tract_Name <- substring(census@data$Tract_Name, 14,)
census_df <- census@data
# cleaning the PUMAs data
pumas_df <- tidy(pumas, id = 'PUMACE10')
pumas@data <- pumas@data %>% mutate(id = row(pumas@data)[,1]-1)
pumas$id <- as.character(pumas$id)
pumas_df <- left_join(pumas_df, pumas@data, by='id')
pumas_df <- cbind(pumas_df[1:7], pumas_df$NAME10)
colnames(pumas_df)[8] <- 'name'
pumas_df <- pumas_df %>% filter(str_detect(name, 'Seattle'))
# keying both datasets by PUMA
NW_beats <- c('N1', 'N2', 'N3', 'J1', 'J2', 'J3', 'B1', 'B2', 'B3')
NE_beats <- c('L1', 'L2', 'L3', 'U1', 'U2', 'U3', 'H2')
Downtown_beats <- c('Q1', 'Q2', 'Q3', 'D1', 'D2', 'D3', 'M1', 'M2', 'M3', 'K1',
'E1', 'E3', 'K3')
SE_beats <- c('E2', 'G1', 'G2', 'G3', 'C1', 'C2', 'C3', 'R2', 'R3', 'H3', 'S2', 'S3')
W_beats <- c('K2', 'O1', 'O2', 'O3', 'R1', 'S1', 'W1', 'W2', 'W3', 'F1', 'F2', 'F3')
NW_tracts <- c('3', '4.01', '4.02', '5', '6', '13', '14', '15', '16', '17.01',
'17.02', '18', '27', '28', '29', '30', '31', '32', '33', '34',
'35', '36', '46', '47', '48', '49', '50', '51', '54')
NE_tracts <- c('1', '2', '7', '8', '9', '10', '11', '12', '19', '20', '21', '22',
'24', '25', '26', '38', '39', '40', '41', '42', '43.01', '43.02',
'44', '45', '52', '53.01', '53.02')
Downtown_tracts <- c('56', '57', '58.01', '58.02', '59', '60', '61', '66', '68',
'69', '70', '71', '72', '73', '74.01', '74.02', '80.01',
'80.02', '81', '82', '83', '84', '85', '91', '92')
SE_tracts <- c('62', '63', '64', '65', '75', '76', '77', '78', '86', '87', '88',
'89', '90', '95', '101', '102', '103', '111.01', '111.02', '118',
'119')
W_tracts <- c('93', '94', '96', '97.01', '97.02', '98', '99', '100.01', '100.02',
'104.01', '104.02', '105', '106', '107.01', '107.02', '108', '109',
'110.01', '110.02', '112', '113', '114.01', '114.02', '115', '116',
'117', '120', '121')
match_beat_PUMA <- function(s) {
if (s %in% NW_beats) {
return('NW')
} else if (s %in% NE_beats) {
return('NE')
} else if (s %in% Downtown_beats) {
return('Downtown')
} else if (s %in% SE_beats) {
return('SE')
} else if (s %in% W_beats) {
return('W')
} else {
return('')
}
}
match_tract_PUMA <- function(s) {
if (s %in% NW_tracts) {
return('NW')
} else if (s %in% NE_tracts) {
return('NE')
} else if (s %in% Downtown_tracts) {
return('Downtown')
} else if (s %in% SE_tracts) {
return('SE')
} else if (s %in% W_tracts) {
return('W')
} else {
return('')
}
}
by_beat$PUMA <- sapply(by_beat$beat, match_beat_PUMA)
beats@data$PUMA <- sapply(beats@data$beat, match_beat_PUMA)
census_df$PUMA <- sapply(census_df$Tract_Name, match_tract_PUMA)
# creating the final dataset
census_df <- census_df %>% filter(!(PUMA == ''))
by_puma <- aggregate(cbind(Total_Pop, White, Black, NatAm, Asian, PacIsl,
OtherRace, TwoPlusRace, HispLat, EngNotVWell,
Pop200PctBelowPov, PersonOfColor) ~ PUMA,
data = census_df, sum)
by_puma <- left_join(by_puma, aggregate(cbind(Pct_HSGrad, Pct_BachGrad, Median_Age, MedianHHIncome,
Median_Gross_Rent) ~ PUMA,
data = census_df, median))
by_beat <- left_join(by_beat, by_puma, by='PUMA')
colnames(by_beat) <- c('Beat', 'Type_1', 'Type_2', 'Type_3', 'Type_4', 'NatAm_uof',
'Asian_uof', 'Black_uof', 'HispLat_uof', 'PacIsl_uof',
'RaceNA_uof', 'White_uof', 'F_uof', 'M_uof', 'GenderNA_uof',
'Count_uof', 'PUMA', 'Total_Pop', 'White_pop', 'Black_pop',
'NatAm_pop', 'Asian_pop', 'PacIsl_pop', 'OtherRace_pop',
'TwoPlusRace_pop', 'HispLat_pop', 'Pct_HSGrad', 'Pct_BachGrad',
'EngNotVWell', 'Pop200PctBelowPov', 'PersonOfColor',
'Median_Age', 'Median_HHIncome', 'Median_GrossIncome')
by_puma <- left_join(by_puma, aggregate(cbind(Type_1, Type_2, Type_3, Type_4,
NatAm_uof, Asian_uof, Black_uof,
HispLat_uof, PacIsl_uof, RaceNA_uof,
White_uof, F_uof, M_uof, GenderNA_uof,
Count_uof) ~ PUMA, data = by_beat,
sum), by='PUMA')
by_date <- aggregate(cbind(Type_1, Type_2, Type_3, Type_4, Nat_Am, Asian,
Black, Hisp_Lat, Pac_Isl, Race_NA, White, count) ~ Date,
data = uof, sum)
##Nicole making mini data set
#creating total sum
total_uof_count <- as.numeric(sum(by_beat$Type_1) + sum(by_beat$Type_2) +
sum(by_beat$Type_3) + sum(by_beat$Type_4))
total_population <- as.numeric(sum(by_puma$Total_Pop))
#creating columns
race <- c("White", "Black/African American","Native American", "Asian",
"Pacific Islander", "Hispanic / Latino", "Not Specified")
uof_count <- c(sum(by_beat$White_uof), sum(by_beat$Black_uof), sum(by_beat$NatAm_uof),
sum(by_beat$Asian_uof), sum(by_beat$PacIsl_uof), sum(by_beat$HispLat_uof),
sum(by_beat$RaceNA_uof))
uof_percent <- uof_count / total_uof_count
pop_count <- c(sum(by_puma$White), sum(by_puma$Black), sum(by_puma$NatAm),
sum(by_puma$Asian), sum(by_puma$PacIsl), sum(by_puma$HispLat), 0)
pop_percent <- pop_count / total_population
#combine columns into dataframe
by_race <- data.frame(race = race, uof_percent = uof_percent, pop_percent = pop_percent,
difference = uof_percent - pop_percent)
#transpose the data so each row is uof/pop percent and each column is race
#hoping this will make animation easier
by_percent <- data.frame(White = double(3), Black = double(3),
NatAm= double(3), Asian = double(3), PacIsl = double(3),
HispLat = double(3), RaceNA = double(3))
for(i in 1:7) {
by_percent[, i] <- c(uof_count[i]/total_uof_count, pop_count[i] / total_population,
uof_count[i]/total_uof_count - pop_count[i] / total_population)
}
rownames(by_percent)<- c("uof_count", "pop_count", "difference")
#exporting to csv
View(by_race)
for(i in 1:7) {
by_percent[, i] <- c(uof_count[i]/total_uof_count * 100, pop_count[i] / total_population * 100,
uof_count[i]/total_uof_count * 100 - pop_count[i] / total_population * 100)
}
View(by_percent)
write.csv(by_percent, 'static/by_percent.csv')
View(by_race)
by_race <- data.frame(race = race, uof_percent = uof_percent * 100, pop_percent = pop_percent * 100,
difference = uof_percent * 100 - pop_percent * 100)
#exporting to csv
write.csv(by_race, 'static/by_race.csv', row.names=FALSE)
