{"version":3,"sources":["daily_timeline.js"],"names":["options","config","init","view","tooltip","vegaTooltip","Handler","call","renderer","vl","register","vega","vegaLite","uof","d3","json","then","data","levels","parser","timeParse","year","timeFormat","bb","mm","map","incident","incident_type","indexOf","occured_date_time","Occurance_Date","blah","drawTimeline","hover","selectSingle","encodings","on","nearest","empty","line","markLine","encode","x","fieldT","title","timeUnit","y","count","color","field","base","transform","filter","label","align","dx","dy","white","stroke","strokeWidth","dateBase","dateLabel","white1","tooltipBase","layer","markText","value","text","markRule","markCircle","select","opacity","if","width","height","render","viewElement","document","getElementById","appendChild","drawDaily","line_","selectInterval","bind","stuff"],"mappings":"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","file":"daily_timeline.f77bd625.js","sourceRoot":"..\\src","sourcesContent":["const options = {\r\n  config: {\r\n    // Vega-Lite default configuration\r\n  },\r\n  init: (view) => {\r\n    // initialize tooltip handler\r\n    view.tooltip(new vegaTooltip.Handler().call);\r\n  },\r\n  view: {\r\n    // view constructor options\r\n    // remove the loader if you don't want to default to vega-datasets!\r\n    //   loader: vega.loader({\r\n    //     baseURL: \"\",\r\n    //   }),\r\n    renderer: \"canvas\",\r\n  },\r\n};\r\n\r\nvl.register(vega, vegaLite, options);\r\n\r\n// Again, We use d3.csv() to process data\r\nvar uof = [];\r\n\r\nd3.json(\"https://data.seattle.gov/resource/ppi5-g2bj.json?$limit=20000\").then(function(data) {\r\n  const levels = [\"Level 1 - Use of Force\", \"Level 2 - Use of Force\", \"Level 3 - Use of Force\",\"Level 3 - OIS\"];\r\n    const parser = d3.timeParse('%Y-%m-%dT%H:%M:%S.%L');\r\n    const year = d3.timeFormat('%B %Y');\r\n    const bb = d3.timeFormat('%Y-%m');\r\n    const mm = d3.timeFormat('%Y-%m-%d')\r\n    uof = data.map(incident => ({\r\n        ...incident,\r\n        incident_type: 1+levels.indexOf(incident.incident_type),\r\n        occured_date_time: parser(incident.occured_date_time),\r\n        Occurance_Date: year(parser(incident.occured_date_time)),\r\n        blah: bb(parser(incident.occured_date_time)),\r\n\r\n    }));\r\n   // console.log(uof); // This line was used to check values stored in uof after processing. feel free to delete.\r\n    drawTimeline();\r\n    // your other functions goes here. \r\n});\r\n\r\nfunction drawTimeline() {\r\n  // var sunshine = add_data(vl, sunshine.csv, format_type = NULL);\r\n  // your visualization goes here\r\n  const hover = vl.selectSingle()\r\n    .encodings('x')  // limit selection to x-axis value\r\n    .on('mouseover') // select on mouseover events\r\n    .nearest(true)   // select data point nearest the cursor\r\n    .empty('none');  // empty selection includes no data points \r\n  const line = vl.markLine()\r\n    .data(uof)\r\n    .encode(\r\n    vl.x().fieldT('blah').title(\"Date\").timeUnit(\"yearmonth\"),\r\n    vl.y().count(\"subject_race\").title(\"Counts\"), \r\n    vl.color().field(\"subject_race\"));\r\n    // shared base for new layers, filtered to hover selection\r\n   const base = line.transform(vl.filter(hover));\r\n\r\n   // mark properties for text label layers\r\n    const label = {align: 'left', dx: 5, dy: -5};\r\n    const white = {stroke: 'white', strokeWidth: 2};\r\n  \r\n     const dateBase = base.transform(vl.filter(hover));\r\n     const dateLabel = {align: 'center', dx:5, dy: -5};\r\n     const white1 = {stroke: 'white', strokeWidth: 2};\r\n\r\n     const tooltipBase = base\r\n    .transform(vl.filter(hover));\r\n\r\n    const tooltip = vl.layer(\r\n   // tooltipBase.markRule({ strokeWidth: 0.5 }),\r\n    tooltipBase.markText({ align: \"center\"}).encode(\r\n      vl.y().value(0),\r\n      vl.text().fieldT(\"blah\").timeUnit(\"yearmonth\"),\r\n      vl.color().value(\"black\")\r\n    )\r\n  )\r\n  vl.data(uof)\r\n    .layer(\r\n      line,\r\n      // add a rule mark to serve as a guide line\r\n      vl.markRule({color: '#aaa'})\r\n        .transform(vl.filter(hover))\r\n        .encode(vl.x().fieldT('blah').timeUnit(\"yearmonth\")),\r\n      // add circle marks for selected time points, hide unselected points\r\n      line.markCircle()\r\n        .select(hover) // use as anchor points for selection\r\n        .encode(vl.opacity().if(hover, vl.value(1)).value(0)),\r\n      // add white stroked text to provide a legible background for labels\r\n      base.markText(label, white).encode(vl.text().count('subject_race')),\r\n      // add text labels for stock prices\r\n      base.markText(label).encode(vl.text().count('subject_race')),\r\n  //    dateBase.markText(dateLabel, white1).encode(vl.text().count('subject_race')),\r\n    //  dateBase.markText(dateLabel).encode(vl.text().fieldT('blah').timeUnit(\"yearmonthdate\"))\r\n    tooltip)\r\n    .width(700)\r\n    .height(350)\r\n    .title(\"Monthly Counts of Use of Force Incidents\")\r\n  \r\n    .render()\r\n    .then(viewElement => {\r\n    // render returns a promise to a DOM element containing the chart\r\n    // viewElement.value contains the Vega View object instance\r\n    document.getElementById('view').appendChild(viewElement);\r\n  });\r\n \r\n  function drawTimeline() {\r\n  // var sunshine = add_data(vl, sunshine.csv, format_type = NULL);\r\n  // your visualization goes here\r\n  const hover = vl.selectSingle()\r\n    .encodings('x')  // limit selection to x-axis value\r\n    .on('mouseover') // select on mouseover events\r\n    .nearest(true)   // select data point nearest the cursor\r\n    .empty('none');  // empty selection includes no data points \r\n  const line = vl.markLine()\r\n    .data(uof)\r\n    .encode(\r\n    vl.x().fieldT('blah').title(\"Date\").timeUnit(\"yearmonth\"),\r\n    vl.y().count(\"subject_race\").title(\"Counts\"), \r\n    vl.color().field(\"subject_race\"));\r\n    // shared base for new layers, filtered to hover selection\r\n   const base = line.transform(vl.filter(hover));\r\n\r\n   // mark properties for text label layers\r\n    const label = {align: 'left', dx: 5, dy: -5};\r\n    const white = {stroke: 'white', strokeWidth: 2};\r\n  \r\n     const dateBase = base.transform(vl.filter(hover));\r\n     const dateLabel = {align: 'center', dx:5, dy: -5};\r\n     const white1 = {stroke: 'white', strokeWidth: 2};\r\n\r\n     const tooltipBase = base\r\n    .transform(vl.filter(hover));\r\n\r\n    const tooltip = vl.layer(\r\n   // tooltipBase.markRule({ strokeWidth: 0.5 }),\r\n    tooltipBase.markText({ align: \"center\"}).encode(\r\n      vl.y().value(0),\r\n      vl.text().fieldT(\"blah\").timeUnit(\"yearmonth\"),\r\n      vl.color().value(\"black\")\r\n    )\r\n  )\r\n  vl.data(uof)\r\n    .layer(\r\n      line,\r\n      // add a rule mark to serve as a guide line\r\n      vl.markRule({color: '#aaa'})\r\n        .transform(vl.filter(hover))\r\n        .encode(vl.x().fieldT('blah')),\r\n      // add circle marks for selected time points, hide unselected points\r\n      line.markCircle()\r\n        .select(hover) // use as anchor points for selection\r\n        .encode(vl.opacity().if(hover, vl.value(1)).value(0)),\r\n      // add white stroked text to provide a legible background for labels\r\n      base.markText(label, white).encode(vl.text().count('subject_race')),\r\n      // add text labels for stock prices\r\n      base.markText(label).encode(vl.text().count('subject_race')),\r\n  //    dateBase.markText(dateLabel, white1).encode(vl.text().count('subject_race')),\r\n    //  dateBase.markText(dateLabel).encode(vl.text().fieldT('blah').timeUnit(\"yearmonthdate\"))\r\n    tooltip)\r\n    .width(700)\r\n    .height(350)\r\n    .title(\"Monthly Counts of Use of Force Incidents\")\r\n  \r\n    .render()\r\n    .then(viewElement => {\r\n    // render returns a promise to a DOM element containing the chart\r\n    // viewElement.value contains the Vega View object instance\r\n    document.getElementById('view5').appendChild(viewElement);\r\n  });\r\n\r\n  \r\n function drawDaily() {\r\n \r\n  const hover = vl.selectSingle()\r\n    .encodings('x')  // limit selection to x-axis value\r\n    .on('mouseover') // select on mouseover events\r\n    .nearest(true)   // select data point nearest the cursor\r\n    .empty('none');  // empty selection includes no data points \r\n\r\n   const line_ = vl.markLine()\r\n    .data(uof)\r\n    .encode(\r\n      vl.opacity().value(1),\r\n    vl.x().fieldT('Date').title(\"Date (Month, Day, Year)\").timeUnit(\"yearmonthdate\"),\r\n    vl.y().count(\"subject_race\").title(\"UoF Counts\"),\r\n      vl.color().value(\"blue\")\r\n    );\r\n  \r\n  const line = vl.markLine()\r\n    .data(uof)\r\n    .select(\r\n     vl.selectInterval().bind('scales').encodings('x'),    // Just adding a line of code, how amazing!\r\n    )\r\n    .encode(\r\n      vl.opacity().value(0),\r\n      vl.x().fieldT('Date').title(\"Date (Month, Day, Year)\").timeUnit(\"yearmonthdate\"),\r\n      vl.y().count(\"subject_race\").title(\"UoF Counts\")\r\n    );\r\n \r\n  // shared base for new layers, filtered to hover selection\r\n  const base = line_.transform(vl.filter(hover));\r\n\r\n  // mark properties for text label layers\r\n  const label = {align: 'center', dx: 7, dy: -15};\r\n  const white = {stroke: 'white', strokeWidth: 2};\r\n  \r\n  const dateBase = base.transform(vl.filter(hover));\r\n \r\n  const dateLabel = {align: 'center', dx:5, dy: -5};\r\n  const white1 = {stroke: 'white', strokeWidth: 2};\r\n   \r\n   const tooltipBase = base\r\n    .transform(vl.filter(hover));\r\n\r\n  const tooltip = vl.layer(\r\n   // tooltipBase.markRule({ strokeWidth: 0.5 }),\r\n    tooltipBase.markText({ align: \"center\"})\r\n    .select(\r\n     vl.selectInterval().bind()    // Just adding a line of code, how amazing!\r\n    )\r\n    .encode(\r\n      vl.y().value(15),\r\n      vl.text().fieldT(\"Date\").timeUnit(\"yearmonthdate\"),\r\n      vl.color().value(\"black\")\r\n    )\r\n  )\r\n  \r\n  vl.data(stuff)\r\n    .layer(\r\n          line,\r\n          line_,\r\n          line_.markCircle().select(hover) // use as anchor points for selection\r\n            .encode(vl.opacity().if(hover, vl.value(1)).value(0)),\r\n           base.markText(label, white).encode(vl.text().count('subject_race')),\r\n           base.markText(label).encode(vl.text().count('subject_race')), \r\n           vl.markRule({color: '#aaa'})\r\n             .transform(vl.filter(hover))\r\n             .encode(vl.x().fieldT('Date').timeUnit(\"yearmonthdate\")),\r\n        tooltip\r\n    )\r\n  .title(\"Daily Counts, Total\")\r\n  .width(700)\r\n    .height(400) \r\n    .render()\r\n    .then(viewElement => {\r\n    // render returns a promise to a DOM element containing the chart\r\n    // viewElement.value contains the Vega View object instance\r\n    document.getElementById('view').appendChild(viewElement);\r\n  });\r\n }}\r\n  }\r\n"]}